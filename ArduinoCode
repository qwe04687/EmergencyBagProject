#include <Adafruit_AM2320.h>
#include <Adafruit_Sensor.h>
#include <SoftwareSerial.h>
SoftwareSerial BT(3, 4);
Adafruit_AM2320 am2320 = Adafruit_AM2320();
unsigned long now_time = 0;
float dustVal = 0;
int ledPower = 2;
int rgbPower = 5;
int dustPin = 0;
int Rvalue = 254, Gvalue = 1, Bvalue = 127;
int Rdirection = -1, Gdirection = 1, Bdirection = -1;
int delayTime = 6;
const int Red = 10, Green = 11, Blue = 9;
int RGBmode = 0;
int lightness = 0;
String text, environ;

void setup()
{
    Serial.print("Temp: ");
    // put your setup code here, to run once:
    pinMode(Red, OUTPUT);
    pinMode(Green, OUTPUT);
    pinMode(Blue, OUTPUT);
    pinMode(ledPower, OUTPUT);
    pinMode(rgbPower, OUTPUT);
    pinMode(dustPin, INPUT);

    digitalWrite(rgbPower, LOW);
    am2320.begin();
    BT.begin(9600);
    Serial.begin(9600);
    digitalWrite(ledPower, LOW);
    delayMicroseconds(280);
    randomSeed(analogRead(dustPin));
    delayMicroseconds(40);
    digitalWrite(ledPower, HIGH);
}

void loop()
{
    // put your main code here, to run repeatedly:

    LedMode(RGBmode);
    char data;
    if (BT.available())
    {
        data = BT.read();
        text += data;
        if (data == '*')
        {
            text = text.substring(0, text.length() - 1);
            Serial.println(text);
            if (text == "PM2.5")
            {
                digitalWrite(ledPower, LOW);
                delayMicroseconds(280);
                dustVal = analogRead(dustPin);
                delayMicroseconds(40);
                digitalWrite(ledPower, HIGH);
                delay(1000);
                if (dustVal > 36.455)
                {
                    dustVal = (float(dustVal / 1024) - 0.0356) * 12000 * 0.035;
                    environ = "溫度: " + String(am2320.readTemperature()) + "\n濕度: "
                        + String(am2320.readHumidity()) + "\nPM2.5: " + String(dustVal)
                        + "\n環境品質 : ";
                    if (dustVal < 7.5)
                        environ += "非常好\n\n正常戶外活動。";
                    else if (dustVal < 15)
                        environ += "好\n\n正常戶外活動。";
                    else if (dustVal < 30)
                        environ += "一般\n\n正常戶外活動。";
                    else if (dustVal < 105)
                        environ += "差\n\n任何人如果有不適，如眼痛，咳嗽或喉嚨痛等，應該考慮減少戶"
                                   "外活動。";
                    else if (dustVal < 300)
                        environ += "非常差\n\n任何人如果有不適，如眼痛，咳嗽或喉嚨痛等，應減少體力"
                                   "消耗，特別是減少戶外活動。";
                    Serial.println(environ);
                    BT.print(environ);
                }
            }
            if (text == "turnOff")
                RGBmode = 0;
            if (text == "rainbow")
            {
                RGBmode = 1;
                Rvalue = 254, Gvalue = 1, Bvalue = 127;
                Rdirection = -1, Gdirection = 1, Bdirection = -1;
            }
            if (text == "breath")
                RGBmode = 3;
            if (text == "random")
                RGBmode = 4;

            if (text.substring(0, 1) == "R")
                Rvalue = 255 - text.substring(1).toInt();
            if (text.substring(0, 1) == "G")
                Gvalue = 255 - text.substring(1).toInt();
            if (text.substring(0, 1) == "B")
            {
                Bvalue = 255 - text.substring(1).toInt();
                RGBmode = 2;
            }
            text = "";
        }
    }
}

void LedMode(int Mode)
{
    if (Mode == 0)
    {
    }
    if (Mode == 1)
    {
        digitalWrite(rgbPower, HIGH);

        if (millis() > now_time + delayTime)
        {
            now_time = millis();
            analogWrite(Red, Rvalue); // write analog signal
            analogWrite(Green, Gvalue);
            analogWrite(Blue, Bvalue);

            Rvalue = Rvalue + Rdirection; // changing values of LEDs
            Gvalue = Gvalue + Gdirection;
            Bvalue = Bvalue + Bdirection;

            // now change direction for each color if it reaches 255
            if (Rvalue >= 255 || Rvalue <= 0)
            {
                Rdirection = Rdirection * -1;
            }
            if (Gvalue >= 255 || Gvalue <= 0)
            {
                Gdirection = Rdirection * -1;
            }
            if (Bvalue >= 255 || Bvalue <= 0)
            {
                Bdirection = Bdirection * -1;
            }
        }
    }
    if (Mode == 2)
    {
        digitalWrite(rgbPower, HIGH);

        analogWrite(Red, Rvalue); // write analog signal
        analogWrite(Green, Gvalue);
        analogWrite(Blue, Bvalue);
    }
    if (Mode == 3)
    {
        if (millis() > now_time + 4)
        {
            analogWrite(Red, 0); // write analog signal
            analogWrite(Green, 0);
            analogWrite(Blue, 0);
            now_time = millis();
            if (lightness > 360)
                lightness = 0;
            analogWrite(5, (sin(lightness++ * 0.0174533) + 1) * 127);
        }
    }
    if (Mode == 4)
    {
        if (millis() > now_time + 1000)
        {
            now_time = millis();
            digitalWrite(rgbPower, HIGH);

            analogWrite(Red, random(256)); // write analog signal
            analogWrite(Green, random(256));
            analogWrite(Blue, random(256));
        }
    }
}
